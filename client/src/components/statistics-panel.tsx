import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { Progress } from '@/components/ui/progress';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\nimport { FileText, Building, Tag, TrendingUp, Clock, CheckCircle } from 'lucide-react';\nimport type { Statistics } from '@shared/schema';\n\ninterface StatisticsPanelProps {\n  statistics: Statistics;\n}\n\nexport function StatisticsPanel({ statistics }: StatisticsPanelProps) {\n  const chartColors = {\n    primary: 'hsl(var(--primary))',\n    secondary: 'hsl(var(--secondary))',\n    accent: 'hsl(var(--accent))',\n    muted: 'hsl(var(--muted))',\n    chart1: 'hsl(var(--chart-1))',\n    chart2: 'hsl(var(--chart-2))',\n    chart3: 'hsl(var(--chart-3))',\n    chart4: 'hsl(var(--chart-4))',\n    chart5: 'hsl(var(--chart-5))',\n  };\n\n  const pieChartColors = [chartColors.chart1, chartColors.chart2, chartColors.chart3, chartColors.chart4, chartColors.chart5];\n\n  const fulfillmentRate = statistics.totalRequirements > 0 \n    ? Math.round(((statistics.totalRequirements - statistics.newRequirements) / statistics.totalRequirements) * 100)\n    : 0;\n\n  return (\n    <div className=\"grid gap-6\">\n      {/* Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Totalt krav</CardTitle>\n            <FileText className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\" data-testid=\"stat-total-requirements\">\n              {statistics.totalRequirements.toLocaleString('sv-SE')}\n            </div>\n            <div className=\"flex gap-2 mt-2\">\n              <Badge variant=\"destructive\" className=\"text-xs\">\n                {statistics.mustRequirements} Skall\n              </Badge>\n              <Badge variant=\"secondary\" className=\"text-xs\">\n                {statistics.shouldRequirements} Bör\n              </Badge>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Organisationer</CardTitle>\n            <Building className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\" data-testid=\"stat-organizations\">\n              {statistics.organizations}\n            </div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Unika organisationer\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Nya krav</CardTitle>\n            <Clock className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\" data-testid=\"stat-new-requirements\">\n              {statistics.newRequirements}\n            </div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Senaste import\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Grupperade</CardTitle>\n            <Tag className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\" data-testid=\"stat-groups\">\n              {statistics.groups}\n            </div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              AI-grupperade krav\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Progress and Charts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Fulfillment Progress */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <CheckCircle className=\"h-5 w-5\" />\n              Uppfyllelsegrad\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between text-sm\">\n                <span>Totalt hantering</span>\n                <span>{fulfillmentRate}%</span>\n              </div>\n              <Progress value={fulfillmentRate} className=\"w-full\" data-testid=\"progress-fulfillment\" />\n            </div>\n            \n            <div className=\"grid grid-cols-3 gap-4 text-center\">\n              {statistics.statusStats.map((stat, index) => (\n                <div key={stat.status} className=\"space-y-1\">\n                  <div className=\"text-lg font-semibold\">{stat.count}</div>\n                  <div className=\"text-xs text-muted-foreground\">{stat.status}</div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Categories Chart */}\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <TrendingUp className=\"h-5 w-5\" />\n              Kategorier\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <ResponsiveContainer width=\"100%\" height={200}>\n              <BarChart data={statistics.categories.slice(0, 8)}>\n                <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n                <XAxis \n                  dataKey=\"name\" \n                  fontSize={12} \n                  tickLine={false} \n                  axisLine={false}\n                  angle={-45}\n                  textAnchor=\"end\"\n                  height={60}\n                />\n                <YAxis fontSize={12} tickLine={false} axisLine={false} />\n                <Tooltip \n                  contentStyle={{\n                    backgroundColor: 'hsl(var(--popover))',\n                    border: '1px solid hsl(var(--border))',\n                    borderRadius: 'var(--radius)'\n                  }}\n                />\n                <Bar dataKey=\"count\" fill={chartColors.chart1} radius={[4, 4, 0, 0]} />\n              </BarChart>\n            </ResponsiveContainer>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Organizations Distribution */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <Building className=\"h-5 w-5\" />\n            Organisationsfördelning\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <div className=\"space-y-4\">\n              {statistics.organizationStats.slice(0, 10).map((org, index) => (\n                <div key={org.name} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div \n                      className=\"w-3 h-3 rounded-full\" \n                      style={{ backgroundColor: pieChartColors[index % pieChartColors.length] }}\n                    />\n                    <span className=\"text-sm font-medium truncate max-w-[200px]\">{org.name}</span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-sm\">{org.count}</span>\n                    <span className=\"text-xs text-muted-foreground\">\n                      ({Math.round((org.count / statistics.totalRequirements) * 100)}%)\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n            \n            <div className=\"h-[300px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                  <Pie\n                    data={statistics.organizationStats.slice(0, 8)}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={100}\n                    dataKey=\"count\"\n                    nameKey=\"name\"\n                  >\n                    {statistics.organizationStats.slice(0, 8).map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={pieChartColors[index % pieChartColors.length]} />\n                    ))}\n                  </Pie>\n                  <Tooltip \n                    contentStyle={{\n                      backgroundColor: 'hsl(var(--popover))',\n                      border: '1px solid hsl(var(--border))',\n                      borderRadius: 'var(--radius)'\n                    }}\n                  />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default StatisticsPanel;